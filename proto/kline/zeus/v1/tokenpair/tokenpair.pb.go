// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: kline/zeus/v1/tokenpair/tokenpair.proto

package tokenpair

import (
	kline "github.com/Geapefurit/kline-back/proto/kline"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenPairReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *uint32 `protobuf:"varint,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	TokenOneID *uint32 `protobuf:"varint,20,opt,name=TokenOneID,proto3,oneof" json:"TokenOneID,omitempty"`
	TokenTwoID *uint32 `protobuf:"varint,30,opt,name=TokenTwoID,proto3,oneof" json:"TokenTwoID,omitempty"`
	Remark     *string `protobuf:"bytes,40,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *TokenPairReq) Reset() {
	*x = TokenPairReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPairReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPairReq) ProtoMessage() {}

func (x *TokenPairReq) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPairReq.ProtoReflect.Descriptor instead.
func (*TokenPairReq) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{0}
}

func (x *TokenPairReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *TokenPairReq) GetTokenOneID() uint32 {
	if x != nil && x.TokenOneID != nil {
		return *x.TokenOneID
	}
	return 0
}

func (x *TokenPairReq) GetTokenTwoID() uint32 {
	if x != nil && x.TokenTwoID != nil {
		return *x.TokenTwoID
	}
	return 0
}

func (x *TokenPairReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type TokenPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"token_one_id"
	TokenOneID uint32 `protobuf:"varint,20,opt,name=TokenOneID,proto3" json:"TokenOneID,omitempty" sql:"token_one_id"`
	// @inject_tag: sql:"token_one_address"
	TokenOneAddress string `protobuf:"bytes,21,opt,name=TokenOneAddress,proto3" json:"TokenOneAddress,omitempty" sql:"token_one_address"`
	// @inject_tag: sql:"token_two_id"
	TokenTwoID uint32 `protobuf:"varint,30,opt,name=TokenTwoID,proto3" json:"TokenTwoID,omitempty" sql:"token_two_id"`
	// @inject_tag: sql:"token_two_address"
	TokenTwoAddress string `protobuf:"bytes,31,opt,name=TokenTwoAddress,proto3" json:"TokenTwoAddress,omitempty" sql:"token_two_address"`
	// @inject_tag: sql:"remark"
	Remark string `protobuf:"bytes,40,opt,name=Remark,proto3" json:"Remark,omitempty" sql:"remark"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,90,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,100,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *TokenPair) Reset() {
	*x = TokenPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPair) ProtoMessage() {}

func (x *TokenPair) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPair.ProtoReflect.Descriptor instead.
func (*TokenPair) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{1}
}

func (x *TokenPair) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TokenPair) GetTokenOneID() uint32 {
	if x != nil {
		return x.TokenOneID
	}
	return 0
}

func (x *TokenPair) GetTokenOneAddress() string {
	if x != nil {
		return x.TokenOneAddress
	}
	return ""
}

func (x *TokenPair) GetTokenTwoID() uint32 {
	if x != nil {
		return x.TokenTwoID
	}
	return 0
}

func (x *TokenPair) GetTokenTwoAddress() string {
	if x != nil {
		return x.TokenTwoAddress
	}
	return ""
}

func (x *TokenPair) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TokenPair) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TokenPair) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *kline.Uint32Val      `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	TokenOneID *kline.Uint32Val      `protobuf:"bytes,20,opt,name=TokenOneID,proto3,oneof" json:"TokenOneID,omitempty"`
	TokenTwoID *kline.Uint32Val      `protobuf:"bytes,30,opt,name=TokenTwoID,proto3,oneof" json:"TokenTwoID,omitempty"`
	Remark     *kline.StringVal      `protobuf:"bytes,40,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
	IDs        *kline.Uint32SliceVal `protobuf:"bytes,200,opt,name=IDs,proto3,oneof" json:"IDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *kline.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetTokenOneID() *kline.Uint32Val {
	if x != nil {
		return x.TokenOneID
	}
	return nil
}

func (x *Conds) GetTokenTwoID() *kline.Uint32Val {
	if x != nil {
		return x.TokenTwoID
	}
	return nil
}

func (x *Conds) GetRemark() *kline.StringVal {
	if x != nil {
		return x.Remark
	}
	return nil
}

func (x *Conds) GetIDs() *kline.Uint32SliceVal {
	if x != nil {
		return x.IDs
	}
	return nil
}

type CreateTokenPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TokenPairReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTokenPairRequest) Reset() {
	*x = CreateTokenPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTokenPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTokenPairRequest) ProtoMessage() {}

func (x *CreateTokenPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTokenPairRequest.ProtoReflect.Descriptor instead.
func (*CreateTokenPairRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTokenPairRequest) GetInfo() *TokenPairReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTokenPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TokenPair `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTokenPairResponse) Reset() {
	*x = CreateTokenPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTokenPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTokenPairResponse) ProtoMessage() {}

func (x *CreateTokenPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTokenPairResponse.ProtoReflect.Descriptor instead.
func (*CreateTokenPairResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTokenPairResponse) GetInfo() *TokenPair {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTokenPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetTokenPairRequest) Reset() {
	*x = GetTokenPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPairRequest) ProtoMessage() {}

func (x *GetTokenPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPairRequest.ProtoReflect.Descriptor instead.
func (*GetTokenPairRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{5}
}

func (x *GetTokenPairRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetTokenPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TokenPair `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetTokenPairResponse) Reset() {
	*x = GetTokenPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPairResponse) ProtoMessage() {}

func (x *GetTokenPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPairResponse.ProtoReflect.Descriptor instead.
func (*GetTokenPairResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{6}
}

func (x *GetTokenPairResponse) GetInfo() *TokenPair {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTokenPairsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetTokenPairsRequest) Reset() {
	*x = GetTokenPairsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenPairsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPairsRequest) ProtoMessage() {}

func (x *GetTokenPairsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPairsRequest.ProtoReflect.Descriptor instead.
func (*GetTokenPairsRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{7}
}

func (x *GetTokenPairsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetTokenPairsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTokenPairsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTokenPairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*TokenPair `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetTokenPairsResponse) Reset() {
	*x = GetTokenPairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenPairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPairsResponse) ProtoMessage() {}

func (x *GetTokenPairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPairsResponse.ProtoReflect.Descriptor instead.
func (*GetTokenPairsResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{8}
}

func (x *GetTokenPairsResponse) GetInfos() []*TokenPair {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetTokenPairsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetTokenPairOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetTokenPairOnlyRequest) Reset() {
	*x = GetTokenPairOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenPairOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPairOnlyRequest) ProtoMessage() {}

func (x *GetTokenPairOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPairOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetTokenPairOnlyRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{9}
}

func (x *GetTokenPairOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetTokenPairOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TokenPair `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetTokenPairOnlyResponse) Reset() {
	*x = GetTokenPairOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenPairOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPairOnlyResponse) ProtoMessage() {}

func (x *GetTokenPairOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPairOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetTokenPairOnlyResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{10}
}

func (x *GetTokenPairOnlyResponse) GetInfo() *TokenPair {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTokenPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TokenPairReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTokenPairRequest) Reset() {
	*x = UpdateTokenPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTokenPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTokenPairRequest) ProtoMessage() {}

func (x *UpdateTokenPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTokenPairRequest.ProtoReflect.Descriptor instead.
func (*UpdateTokenPairRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTokenPairRequest) GetInfo() *TokenPairReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTokenPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TokenPair `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTokenPairResponse) Reset() {
	*x = UpdateTokenPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTokenPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTokenPairResponse) ProtoMessage() {}

func (x *UpdateTokenPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTokenPairResponse.ProtoReflect.Descriptor instead.
func (*UpdateTokenPairResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTokenPairResponse) GetInfo() *TokenPair {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistTokenPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistTokenPairRequest) Reset() {
	*x = ExistTokenPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTokenPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTokenPairRequest) ProtoMessage() {}

func (x *ExistTokenPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTokenPairRequest.ProtoReflect.Descriptor instead.
func (*ExistTokenPairRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{13}
}

func (x *ExistTokenPairRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type ExistTokenPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,10,opt,name=Exist,proto3" json:"Exist,omitempty"`
}

func (x *ExistTokenPairResponse) Reset() {
	*x = ExistTokenPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTokenPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTokenPairResponse) ProtoMessage() {}

func (x *ExistTokenPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTokenPairResponse.ProtoReflect.Descriptor instead.
func (*ExistTokenPairResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{14}
}

func (x *ExistTokenPairResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type ExistTokenPairCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistTokenPairCondsRequest) Reset() {
	*x = ExistTokenPairCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTokenPairCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTokenPairCondsRequest) ProtoMessage() {}

func (x *ExistTokenPairCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTokenPairCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistTokenPairCondsRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{15}
}

func (x *ExistTokenPairCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistTokenPairCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,10,opt,name=Exist,proto3" json:"Exist,omitempty"`
}

func (x *ExistTokenPairCondsResponse) Reset() {
	*x = ExistTokenPairCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTokenPairCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTokenPairCondsResponse) ProtoMessage() {}

func (x *ExistTokenPairCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTokenPairCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistTokenPairCondsResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{16}
}

func (x *ExistTokenPairCondsResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type DeleteTokenPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteTokenPairRequest) Reset() {
	*x = DeleteTokenPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTokenPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTokenPairRequest) ProtoMessage() {}

func (x *DeleteTokenPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTokenPairRequest.ProtoReflect.Descriptor instead.
func (*DeleteTokenPairRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteTokenPairRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteTokenPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TokenPair `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteTokenPairResponse) Reset() {
	*x = DeleteTokenPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTokenPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTokenPairResponse) ProtoMessage() {}

func (x *DeleteTokenPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTokenPairResponse.ProtoReflect.Descriptor instead.
func (*DeleteTokenPairResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteTokenPairResponse) GetInfo() *TokenPair {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_kline_zeus_v1_tokenpair_tokenpair_proto protoreflect.FileDescriptor

var file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x7a, 0x65, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70,
	0x61, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6b, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x1a, 0x11,
	0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4f, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0a, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x6e, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x77, 0x6f, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x77, 0x6f, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f,
	0x6e, 0x65, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x77,
	0x6f, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x83,
	0x02, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x6e, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x6e, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x77, 0x6f, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x54, 0x77, 0x6f, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x77, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x77, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xb2, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x25,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x6e,
	0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x0a, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x6e, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x0a,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x77, 0x6f, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x48, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x77, 0x6f, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x03, 0x49, 0x44, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x4f, 0x6e, 0x65, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x54, 0x77, 0x6f, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x49, 0x44, 0x73, 0x22, 0x4f, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x76, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70,
	0x61, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22,
	0x2e, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22,
	0x4e, 0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x33, 0x0a, 0x1b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x4d,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x93, 0x06,
	0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x2b, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x2b, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x28, 0x2e, 0x6b, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72,
	0x73, 0x12, 0x29, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x2a, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x13, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2f,
	0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70,
	0x61, 0x69, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50,
	0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x2b, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x47, 0x65, 0x61, 0x70, 0x65, 0x66, 0x75, 0x72, 0x69, 0x74, 0x2f, 0x6b, 0x6c, 0x69,
	0x6e, 0x65, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x6c,
	0x69, 0x6e, 0x65, 0x2f, 0x7a, 0x65, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x70, 0x61, 0x69, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescOnce sync.Once
	file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescData = file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDesc
)

func file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescGZIP() []byte {
	file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescOnce.Do(func() {
		file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescData = protoimpl.X.CompressGZIP(file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescData)
	})
	return file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDescData
}

var file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_kline_zeus_v1_tokenpair_tokenpair_proto_goTypes = []interface{}{
	(*TokenPairReq)(nil),                // 0: kline.v1.tokenpaire.TokenPairReq
	(*TokenPair)(nil),                   // 1: kline.v1.tokenpaire.TokenPair
	(*Conds)(nil),                       // 2: kline.v1.tokenpaire.Conds
	(*CreateTokenPairRequest)(nil),      // 3: kline.v1.tokenpaire.CreateTokenPairRequest
	(*CreateTokenPairResponse)(nil),     // 4: kline.v1.tokenpaire.CreateTokenPairResponse
	(*GetTokenPairRequest)(nil),         // 5: kline.v1.tokenpaire.GetTokenPairRequest
	(*GetTokenPairResponse)(nil),        // 6: kline.v1.tokenpaire.GetTokenPairResponse
	(*GetTokenPairsRequest)(nil),        // 7: kline.v1.tokenpaire.GetTokenPairsRequest
	(*GetTokenPairsResponse)(nil),       // 8: kline.v1.tokenpaire.GetTokenPairsResponse
	(*GetTokenPairOnlyRequest)(nil),     // 9: kline.v1.tokenpaire.GetTokenPairOnlyRequest
	(*GetTokenPairOnlyResponse)(nil),    // 10: kline.v1.tokenpaire.GetTokenPairOnlyResponse
	(*UpdateTokenPairRequest)(nil),      // 11: kline.v1.tokenpaire.UpdateTokenPairRequest
	(*UpdateTokenPairResponse)(nil),     // 12: kline.v1.tokenpaire.UpdateTokenPairResponse
	(*ExistTokenPairRequest)(nil),       // 13: kline.v1.tokenpaire.ExistTokenPairRequest
	(*ExistTokenPairResponse)(nil),      // 14: kline.v1.tokenpaire.ExistTokenPairResponse
	(*ExistTokenPairCondsRequest)(nil),  // 15: kline.v1.tokenpaire.ExistTokenPairCondsRequest
	(*ExistTokenPairCondsResponse)(nil), // 16: kline.v1.tokenpaire.ExistTokenPairCondsResponse
	(*DeleteTokenPairRequest)(nil),      // 17: kline.v1.tokenpaire.DeleteTokenPairRequest
	(*DeleteTokenPairResponse)(nil),     // 18: kline.v1.tokenpaire.DeleteTokenPairResponse
	(*kline.Uint32Val)(nil),             // 19: kline.Uint32Val
	(*kline.StringVal)(nil),             // 20: kline.StringVal
	(*kline.Uint32SliceVal)(nil),        // 21: kline.Uint32SliceVal
}
var file_kline_zeus_v1_tokenpair_tokenpair_proto_depIdxs = []int32{
	19, // 0: kline.v1.tokenpaire.Conds.ID:type_name -> kline.Uint32Val
	19, // 1: kline.v1.tokenpaire.Conds.TokenOneID:type_name -> kline.Uint32Val
	19, // 2: kline.v1.tokenpaire.Conds.TokenTwoID:type_name -> kline.Uint32Val
	20, // 3: kline.v1.tokenpaire.Conds.Remark:type_name -> kline.StringVal
	21, // 4: kline.v1.tokenpaire.Conds.IDs:type_name -> kline.Uint32SliceVal
	0,  // 5: kline.v1.tokenpaire.CreateTokenPairRequest.Info:type_name -> kline.v1.tokenpaire.TokenPairReq
	1,  // 6: kline.v1.tokenpaire.CreateTokenPairResponse.Info:type_name -> kline.v1.tokenpaire.TokenPair
	1,  // 7: kline.v1.tokenpaire.GetTokenPairResponse.Info:type_name -> kline.v1.tokenpaire.TokenPair
	2,  // 8: kline.v1.tokenpaire.GetTokenPairsRequest.Conds:type_name -> kline.v1.tokenpaire.Conds
	1,  // 9: kline.v1.tokenpaire.GetTokenPairsResponse.Infos:type_name -> kline.v1.tokenpaire.TokenPair
	2,  // 10: kline.v1.tokenpaire.GetTokenPairOnlyRequest.Conds:type_name -> kline.v1.tokenpaire.Conds
	1,  // 11: kline.v1.tokenpaire.GetTokenPairOnlyResponse.Info:type_name -> kline.v1.tokenpaire.TokenPair
	0,  // 12: kline.v1.tokenpaire.UpdateTokenPairRequest.Info:type_name -> kline.v1.tokenpaire.TokenPairReq
	1,  // 13: kline.v1.tokenpaire.UpdateTokenPairResponse.Info:type_name -> kline.v1.tokenpaire.TokenPair
	2,  // 14: kline.v1.tokenpaire.ExistTokenPairCondsRequest.Conds:type_name -> kline.v1.tokenpaire.Conds
	1,  // 15: kline.v1.tokenpaire.DeleteTokenPairResponse.Info:type_name -> kline.v1.tokenpaire.TokenPair
	3,  // 16: kline.v1.tokenpaire.Manager.CreateTokenPair:input_type -> kline.v1.tokenpaire.CreateTokenPairRequest
	11, // 17: kline.v1.tokenpaire.Manager.UpdateTokenPair:input_type -> kline.v1.tokenpaire.UpdateTokenPairRequest
	5,  // 18: kline.v1.tokenpaire.Manager.GetTokenPair:input_type -> kline.v1.tokenpaire.GetTokenPairRequest
	7,  // 19: kline.v1.tokenpaire.Manager.GetTokenPairs:input_type -> kline.v1.tokenpaire.GetTokenPairsRequest
	13, // 20: kline.v1.tokenpaire.Manager.ExistTokenPair:input_type -> kline.v1.tokenpaire.ExistTokenPairRequest
	15, // 21: kline.v1.tokenpaire.Manager.ExistTokenPairConds:input_type -> kline.v1.tokenpaire.ExistTokenPairCondsRequest
	17, // 22: kline.v1.tokenpaire.Manager.DeleteTokenPair:input_type -> kline.v1.tokenpaire.DeleteTokenPairRequest
	4,  // 23: kline.v1.tokenpaire.Manager.CreateTokenPair:output_type -> kline.v1.tokenpaire.CreateTokenPairResponse
	12, // 24: kline.v1.tokenpaire.Manager.UpdateTokenPair:output_type -> kline.v1.tokenpaire.UpdateTokenPairResponse
	6,  // 25: kline.v1.tokenpaire.Manager.GetTokenPair:output_type -> kline.v1.tokenpaire.GetTokenPairResponse
	8,  // 26: kline.v1.tokenpaire.Manager.GetTokenPairs:output_type -> kline.v1.tokenpaire.GetTokenPairsResponse
	14, // 27: kline.v1.tokenpaire.Manager.ExistTokenPair:output_type -> kline.v1.tokenpaire.ExistTokenPairResponse
	16, // 28: kline.v1.tokenpaire.Manager.ExistTokenPairConds:output_type -> kline.v1.tokenpaire.ExistTokenPairCondsResponse
	18, // 29: kline.v1.tokenpaire.Manager.DeleteTokenPair:output_type -> kline.v1.tokenpaire.DeleteTokenPairResponse
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_kline_zeus_v1_tokenpair_tokenpair_proto_init() }
func file_kline_zeus_v1_tokenpair_tokenpair_proto_init() {
	if File_kline_zeus_v1_tokenpair_tokenpair_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPairReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTokenPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTokenPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenPairsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenPairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenPairOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenPairOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTokenPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTokenPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTokenPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTokenPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTokenPairCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTokenPairCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTokenPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTokenPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kline_zeus_v1_tokenpair_tokenpair_proto_goTypes,
		DependencyIndexes: file_kline_zeus_v1_tokenpair_tokenpair_proto_depIdxs,
		MessageInfos:      file_kline_zeus_v1_tokenpair_tokenpair_proto_msgTypes,
	}.Build()
	File_kline_zeus_v1_tokenpair_tokenpair_proto = out.File
	file_kline_zeus_v1_tokenpair_tokenpair_proto_rawDesc = nil
	file_kline_zeus_v1_tokenpair_tokenpair_proto_goTypes = nil
	file_kline_zeus_v1_tokenpair_tokenpair_proto_depIdxs = nil
}
