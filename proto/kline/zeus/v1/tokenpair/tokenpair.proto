syntax = "proto3";

package kline.v1.tokenpaire;

option go_package = "github.com/Geapefurit/kline-back/proto/kline/zeus/v1/tokenpair";
import "kline/kline.proto";

service Manager {
  rpc CreateTokenPair(CreateTokenPairRequest)
      returns (CreateTokenPairResponse) {}
  rpc UpdateTokenPair(UpdateTokenPairRequest)
      returns (UpdateTokenPairResponse) {}
  rpc GetTokenPair(GetTokenPairRequest) returns (GetTokenPairResponse) {}
  rpc GetTokenPairs(GetTokenPairsRequest) returns (GetTokenPairsResponse) {}
  rpc ExistTokenPair(ExistTokenPairRequest) returns (ExistTokenPairResponse) {}
  rpc ExistTokenPairConds(ExistTokenPairCondsRequest)
      returns (ExistTokenPairCondsResponse) {}
  rpc DeleteTokenPair(DeleteTokenPairRequest)
      returns (DeleteTokenPairResponse) {}
}

message TokenPairReq {
  optional uint32 ID = 10;
  optional uint32 TokenOneID = 20;
  optional uint32 TokenTwoID = 30;
  optional string Remark = 40;
}

message TokenPair {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"token_one_id"
  uint32 TokenOneID = 20;
  // @inject_tag: sql:"token_one_address"
  string TokenOneAddress = 21;
  // @inject_tag: sql:"token_two_id"
  uint32 TokenTwoID = 30;
  // @inject_tag: sql:"token_two_address"
  string TokenTwoAddress = 31;
  // @inject_tag: sql:"remark"
  string Remark = 40;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 90;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 100;
}

message Conds {
  optional kline.Uint32Val ID = 10;
  optional kline.Uint32Val TokenOneID = 20;
  optional kline.Uint32Val TokenTwoID = 30;
  optional kline.StringVal Remark = 40;
  optional kline.Uint32SliceVal IDs = 200;
}

message CreateTokenPairRequest { TokenPairReq Info = 10; }
message CreateTokenPairResponse { TokenPair Info = 10; }

message GetTokenPairRequest { uint32 ID = 10; }
message GetTokenPairResponse { TokenPair Info = 10; }

message GetTokenPairsRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetTokenPairsResponse {
  repeated TokenPair Infos = 10;
  uint32 Total = 20;
}

message GetTokenPairOnlyRequest { Conds Conds = 10; }
message GetTokenPairOnlyResponse { TokenPair Info = 10; }

message UpdateTokenPairRequest { TokenPairReq Info = 10; }
message UpdateTokenPairResponse { TokenPair Info = 10; }

message ExistTokenPairRequest { uint32 ID = 10; }
message ExistTokenPairResponse { bool Exist = 10; }

message ExistTokenPairCondsRequest { Conds Conds = 10; }
message ExistTokenPairCondsResponse { bool Exist = 10; }

message DeleteTokenPairRequest { uint32 ID = 10; }
message DeleteTokenPairResponse { TokenPair Info = 10; }
