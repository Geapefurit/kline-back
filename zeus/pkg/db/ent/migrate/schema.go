// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// KpointsColumns holds the columns for the "kpoints" table.
	KpointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "token_pair_id", Type: field.TypeUint32},
		{Name: "k_point_type", Type: field.TypeString, Nullable: true, Default: "KPointTypeUnknown"},
		{Name: "open", Type: field.TypeFloat64},
		{Name: "high", Type: field.TypeFloat64},
		{Name: "low", Type: field.TypeFloat64},
		{Name: "close", Type: field.TypeFloat64},
		{Name: "start_time", Type: field.TypeUint32},
		{Name: "end_time", Type: field.TypeUint32},
	}
	// KpointsTable holds the schema information for the "kpoints" table.
	KpointsTable = &schema.Table{
		Name:       "kpoints",
		Columns:    KpointsColumns,
		PrimaryKey: []*schema.Column{KpointsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "kpoint_token_pair_id_k_point_type_end_time",
				Unique:  false,
				Columns: []*schema.Column{KpointsColumns[4], KpointsColumns[5], KpointsColumns[11]},
			},
			{
				Name:    "kpoint_end_time",
				Unique:  false,
				Columns: []*schema.Column{KpointsColumns[11]},
			},
		},
	}
	// KpricesColumns holds the columns for the "kprices" table.
	KpricesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "token_pair_id", Type: field.TypeUint32},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "time", Type: field.TypeUint32},
	}
	// KpricesTable holds the schema information for the "kprices" table.
	KpricesTable = &schema.Table{
		Name:       "kprices",
		Columns:    KpricesColumns,
		PrimaryKey: []*schema.Column{KpricesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "kprice_time",
				Unique:  false,
				Columns: []*schema.Column{KpricesColumns[6]},
			},
		},
	}
	// TokensColumns holds the columns for the "tokens" table.
	TokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "address", Type: field.TypeString},
		{Name: "site", Type: field.TypeString},
		{Name: "icon", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
	}
	// TokensTable holds the schema information for the "tokens" table.
	TokensTable = &schema.Table{
		Name:       "tokens",
		Columns:    TokensColumns,
		PrimaryKey: []*schema.Column{TokensColumns[0]},
	}
	// TokenPairsColumns holds the columns for the "token_pairs" table.
	TokenPairsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "token_one_id", Type: field.TypeUint32},
		{Name: "token_two_id", Type: field.TypeUint32},
		{Name: "remark", Type: field.TypeString, Nullable: true},
	}
	// TokenPairsTable holds the schema information for the "token_pairs" table.
	TokenPairsTable = &schema.Table{
		Name:       "token_pairs",
		Columns:    TokenPairsColumns,
		PrimaryKey: []*schema.Column{TokenPairsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "tokenpair_token_one_id_token_two_id",
				Unique:  true,
				Columns: []*schema.Column{TokenPairsColumns[4], TokenPairsColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		KpointsTable,
		KpricesTable,
		TokensTable,
		TokenPairsTable,
	}
)

func init() {
}
